self.addEventListener("install", (event) => {
  console.log("โ Service Worker installed");
  self.skipWaiting();
});

self.addEventListener("activate", (event) => {
  console.log("โ Service Worker activated");
});

// ๐ ุฅุดุนุงุฑ ุฏูุน (ูู ุงูุฎุงุฏู)
self.addEventListener("push", (event) => {
  const data = event.data ? event.data.json() : {};
  const title = data.title || "RemindMe";
  const options = {
    body: data.body || "You have a reminder!",
    icon: "/ico-192x192.png",
    badge: "/ico-192x192.png",
    vibrate: [200, 100, 200],
    sound: "/alarm.mp3", // โ ููู ุงูุตูุช (ุถุนู ูู public)
    requireInteraction: true
  };

  event.waitUntil(
    self.registration.showNotification(title, options)
  );
});

// ๐ ุฅุดุนุงุฑ ูุญูู (ูู ุงูุชุทุจูู)
self.addEventListener("message", (event) => {
  if (event.data && event.data.type === "LOCAL_REMINDER") {
    const { title, body, delay } = event.data;

    setTimeout(() => {
      self.registration.showNotification(title || "โฐ Reminder", {
        body: body || "It's time!",
        icon: "/ico-192x192.png",
        badge: "/ico-192x192.png",
        vibrate: [200, 100, 200],
        sound: "/alarm.mp3", // โ ุตูุช ุงูุชูุจูู
        requireInteraction: true // ูุจูู ุงูุฅุดุนุงุฑ ุญุชู ุงููุณุชุฎุฏู ูุถุบุทู
      });
    }, delay); // delay ุจุงููููู ุซุงููุฉ
  }
});

// ุนูุฏ ุงูุถุบุท ุนูู ุงูุฅุดุนุงุฑ
self.addEventListener("notificationclick", (event) => {
  event.notification.close();
  event.waitUntil(
    clients.openWindow("/") // ููุชุญ ุงูุชุทุจูู ุฃู ุตูุญุฉ ุงูุจุฏุงูุฉ
  );
});
